// <auto-generated />
using CodeFirstExample.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeFirstExample.Migrations
{
    [DbContext(typeof(CodeFirstExampleContext))]
    [Migration("20240808025838_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeFirstExample.Entities.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("CodeFirstExample.Entities.WorkItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WorkTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("WorkItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "修復系統錯誤",
                            WorkTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "新增功能",
                            WorkTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "測試功能",
                            WorkTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "部署功能",
                            WorkTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "分析需求",
                            WorkTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            Description = "設計系統",
                            WorkTypeId = 6
                        },
                        new
                        {
                            Id = 7,
                            Description = "管理專案",
                            WorkTypeId = 7
                        },
                        new
                        {
                            Id = 8,
                            Description = "支援客戶",
                            WorkTypeId = 8
                        },
                        new
                        {
                            Id = 9,
                            Description = "研究新技術",
                            WorkTypeId = 9
                        },
                        new
                        {
                            Id = 10,
                            Description = "其他工作",
                            WorkTypeId = 10
                        });
                });

            modelBuilder.Entity("CodeFirstExample.Entities.WorkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "維護"
                        },
                        new
                        {
                            Id = 2,
                            Name = "開發"
                        },
                        new
                        {
                            Id = 3,
                            Name = "測試"
                        },
                        new
                        {
                            Id = 4,
                            Name = "部署"
                        },
                        new
                        {
                            Id = 5,
                            Name = "分析"
                        },
                        new
                        {
                            Id = 6,
                            Name = "設計"
                        },
                        new
                        {
                            Id = 7,
                            Name = "管理"
                        },
                        new
                        {
                            Id = 8,
                            Name = "支援"
                        },
                        new
                        {
                            Id = 9,
                            Name = "研究"
                        },
                        new
                        {
                            Id = 10,
                            Name = "其他"
                        });
                });

            modelBuilder.Entity("CodeFirstExample.Entities.Job", b =>
                {
                    b.OwnsOne("CodeFirstExample.ValueObjects.WorkItemValue", "Item", b1 =>
                        {
                            b1.Property<int>("JobId")
                                .HasColumnType("int");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("WorkItemId")
                                .HasColumnType("int");

                            b1.Property<int>("WorkTypeId")
                                .HasColumnType("int");

                            b1.Property<string>("WorkTypeName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("JobId");

                            b1.ToTable("Jobs");

                            b1.WithOwner()
                                .HasForeignKey("JobId");
                        });

                    b.Navigation("Item")
                        .IsRequired();
                });

            modelBuilder.Entity("CodeFirstExample.Entities.WorkItem", b =>
                {
                    b.HasOne("CodeFirstExample.Entities.WorkType", "WorkType")
                        .WithMany("WorkItems")
                        .HasForeignKey("WorkTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("CodeFirstExample.Entities.WorkType", b =>
                {
                    b.Navigation("WorkItems");
                });
#pragma warning restore 612, 618
        }
    }
}
